.comp 920 100111010
.start __cashModel_Start
.depend "gastjeStart" "20161213133947"
.depend "StdGeneric" "20160927153524"
.depend "GenEq" "20160927153524"
.depend "_SystemEnum" "20111221112712"
.depend "StdEnum" "20111221112712"
.depend "StdMisc" "20111221112712"
.depend "StdFunc" "20111221112712"
.depend "StdCharList" "20111221112712"
.depend "StdTuple" "20111221112712"
.depend "StdOrdList" "20111221112712"
.depend "StdList" "20111221112712"
.depend "StdClass" "20111221112712"
.depend "StdFile" "20111221112712"
.depend "StdString" "20111221112712"
.depend "_SystemArray" "20111221112712"
.depend "StdArray" "20111221112712"
.depend "StdChar" "20111221112712"
.depend "StdReal" "20111221112712"
.depend "StdInt" "20111221112712"
.depend "StdBool" "20111221112712"
.depend "StdEnv" "20111221112712"
.depend "StdOverloaded" "20111221112712"
.depend "_SystemDynamic" "20160927153524"
.depend "cashModel" "20161213131116"
.module m_cashModel "cashModel" "20161213134200"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
||	Concurrent Clean Code Generator (Version 0.920)
.impmod StdGeneric
.impdesc e_StdGeneric_dUNIT
.impdesc e_StdGeneric_dLEFT
.impdesc e_StdGeneric_dRIGHT
.impdesc e_StdGeneric_dPAIR
.impdesc e_StdGeneric_dOBJECT
.impdesc e_StdGeneric_dCONS
.impdesc e_StdGeneric_dRECORD
.impdesc e_StdGeneric_dFIELD
.impmod GenEq
.implab e_GenEq_s===
.impdesc e_GenEq_dgEq_Int;2
.impdesc e_GenEq_dgEq_UNIT;7
.impdesc e_GenEq_dgEq_PAIR;8
.impdesc e_GenEq_dgEq_EITHER;9
.impdesc e_GenEq_dgEq_CONS;10
.implab e_GenEq_sgEq_RECORD;11
.impdesc e_GenEq_dgEq_FIELD;12
.implab e_GenEq_sgEq_OBJECT;13
.impmod StdList
.implab e_StdList_smap
.implab e_StdList_sisMember
.implab e_StdList_sremoveMember
.implab e_StdList_ssum
.impmod StdClass
.impdesc e_StdClass_rEq;
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s-;7
.implab e_StdInt_s*;9
.impdesc e_StdInt_d/;10
.implab e_StdInt_n/;10
.implab e_StdInt_sabs;13
.implab e_StdInt_ssign;14
.impdesc e_StdInt_d~;15
.implab e_StdInt_n~;15
.implab e_StdInt_srem;28
.impmod StdOverloaded
.impdesc e_StdOverloaded_r+;
.impdesc e_StdOverloaded_rzero;
.impdesc e_StdOverloaded_r==;
.export e_cashModel_rEuro
.record e_cashModel_rEuro aa 2 0 "Euro"
.export e_cashModel_dEuro.euro
.export e_cashModel_nEuro.euro
.descs e_cashModel_dEuro.euro e_cashModel_nEuro.euro _ 1 0 "Euro.euro"
.n -4 e_cashModel_dEuro.euro
.o 1 0
e_cashModel_nEuro.euro
	push_node _cycle_in_spine 1
	jsr_eval 0
	repl_r_args_a 2 0 1 1
	jsr_eval 0
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.export e_cashModel_dEuro.cent
.export e_cashModel_nEuro.cent
.descs e_cashModel_dEuro.cent e_cashModel_nEuro.cent _ 2 0 "Euro.cent"
.n -4 e_cashModel_dEuro.cent
.o 1 0
e_cashModel_nEuro.cent
	push_node _cycle_in_spine 1
	jsr_eval 0
	repl_r_args_a 2 0 2 1
	jsr_eval 0
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.export e_cashModel_dPizza
.desc0 e_cashModel_dPizza 0 "Pizza"
.export e_cashModel_dBeer
.desc0 e_cashModel_dBeer 1 "Beer"
.export e_cashModel_dCola
.desc0 e_cashModel_dCola 2 "Cola"
.export e_cashModel_dAdd
.desc e_cashModel_dAdd _hnf _add_arg 1 0 "Add"
.export e_cashModel_dRem
.desc e_cashModel_dRem _hnf _add_arg 1 0 "Rem"
.export e_cashModel_dPay
.desc e_cashModel_dPay _hnf _hnf 0 0 "Pay"
.export e_cashModel_reuro;
.record e_cashModel_reuro; a 1 0 "euro;"
.descexp e_cashModel_teuro; e_cashModel_ceuro; _hnf 1 1 "euro;"
.n 1 e_cashModel_teuro;
.o 1 0
e_cashModel_ceuro;
	push_node _cycle_in_spine 1
	jsr_eval 0
.impmod cashModel
.impdesc e_cashModel_reuro;
	fill_r e_cashModel_reuro; 1 0 1 0 0
	pop_a 1
.d 1 0
	rtn
.export e_cashModel_deuro;.euro
.export e_cashModel_neuro;.euro
.export e_cashModel_eaeuro;.euro
.descs e_cashModel_deuro;.euro e_cashModel_neuro;.euro _ 1 0 "euro;.euro"
.n -4 e_cashModel_deuro;.euro e_cashModel_eaeuro;.euro
.o 1 0
e_cashModel_neuro;.euro
	push_node _cycle_in_spine 1
.o 2 0
e_cashModel_eaeuro;.euro
	jsr_eval 0
	repl_r_args_a 1 0 1 1
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.desc d-. _hnf _add_arg 2 0 "-."
.record rgEq_s; a 1 0 "gEq_s;"
.export __cashModel_Start
.o 0 0
__cashModel_Start
	build _ 0 nStart.18
.d 1 0
	jmp _driver
.export e_cashModel_sTD;Minus
.export e_cashModel_eaTD;Minus
.descexp e_cashModel_dTD;Minus e_cashModel_nTD;Minus e_cashModel_lTD;Minus 1 0 "TD;Minus"
.o 2 0
e_cashModel_lTD;Minus
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_cashModel_eaTD;Minus
.n 1 e_cashModel_dTD;Minus e_cashModel_eaTD;Minus
.o 1 0
e_cashModel_nTD;Minus
	push_node _cycle_in_spine 1
.o 2 0
e_cashModel_eaTD;Minus
.o 2 0
e_cashModel_sTD;Minus
.o 2 0
sTD;Minus.22
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_cashModel_sTD;euro;
.export e_cashModel_eaTD;euro;
.descexp e_cashModel_dTD;euro; e_cashModel_nTD;euro; e_cashModel_lTD;euro; 1 0 "TD;euro;"
.o 2 0
e_cashModel_lTD;euro;
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_cashModel_eaTD;euro;
.n 1 e_cashModel_dTD;euro; e_cashModel_eaTD;euro;
.o 1 0
e_cashModel_nTD;euro;
	push_node _cycle_in_spine 1
.o 2 0
e_cashModel_eaTD;euro;
.o 2 0
e_cashModel_sTD;euro;
.o 2 0
sTD;euro;.17
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_cashModel_sTD;Action
.export e_cashModel_eaTD;Action
.descexp e_cashModel_dTD;Action e_cashModel_nTD;Action e_cashModel_lTD;Action 1 0 "TD;Action"
.o 2 0
e_cashModel_lTD;Action
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_cashModel_eaTD;Action
.n 1 e_cashModel_dTD;Action e_cashModel_eaTD;Action
.o 1 0
e_cashModel_nTD;Action
	push_node _cycle_in_spine 1
.o 2 0
e_cashModel_eaTD;Action
.o 2 0
e_cashModel_sTD;Action
.o 2 0
sTD;Action.16
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_cashModel_sTD;Product
.export e_cashModel_eaTD;Product
.descexp e_cashModel_dTD;Product e_cashModel_nTD;Product e_cashModel_lTD;Product 1 0 "TD;Product"
.o 2 0
e_cashModel_lTD;Product
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_cashModel_eaTD;Product
.n 1 e_cashModel_dTD;Product e_cashModel_eaTD;Product
.o 1 0
e_cashModel_nTD;Product
	push_node _cycle_in_spine 1
.o 2 0
e_cashModel_eaTD;Product
.o 2 0
e_cashModel_sTD;Product
.o 2 0
sTD;Product.15
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_cashModel_sTD;Euro
.export e_cashModel_eaTD;Euro
.descexp e_cashModel_dTD;Euro e_cashModel_nTD;Euro e_cashModel_lTD;Euro 1 0 "TD;Euro"
.o 2 0
e_cashModel_lTD;Euro
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_cashModel_eaTD;Euro
.n 1 e_cashModel_dTD;Euro e_cashModel_eaTD;Euro
.o 1 0
e_cashModel_nTD;Euro
	push_node _cycle_in_spine 1
.o 2 0
e_cashModel_eaTD;Euro
.o 2 0
e_cashModel_sTD;Euro
.o 2 0
sTD;Euro.14
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_cashModel_s==;10
.descexp e_cashModel_d==;10 e_cashModel_n==;10 e_cashModel_l==;10 2 0 "==;10"
.a 0 a==;10.11
.o 2 0
e_cashModel_l==;10
	repl_args 1 1
.o 2 0
a==;10.11
.d 2 0
	jsr ea==;10.11
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_cashModel_d==;10
.o 1 0
e_cashModel_n==;10
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea==;10.11
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea==;10.11
	jsr_eval 1
	jsr_eval 0
	push_r_args 1 2 0
	push_r_args 2 2 0
	update_a 3 5
	update_a 1 3
	update_a 2 4
	update_a 0 2
	pop_a 2
.o 4 0
e_cashModel_s==;10
.o 4 0
s==;10.11
			||	Match code, stacksizes A: 4 B: 0
			||	Building the contractum, Stacksizes A: 4 B: 0
			||	q
.impdesc e_cashModel_rEuro
	build_r e_cashModel_rEuro 2 0 2 0
			||	p
	build_r e_cashModel_rEuro 2 0 1 0
			||	gEq_s;
			||	gEq_Euro;12
	buildh e_cashModel_dgEq_Euro;12 0
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp e_GenEq_s===
.export e_cashModel_sgEq_Euro;12
.descexp e_cashModel_dgEq_Euro;12 e_cashModel_ngEq_Euro;12 e_cashModel_lgEq_Euro;12 2 0 "gEq_Euro;12"
.a 0 agEq_Euro;12.13
.o 2 0
e_cashModel_lgEq_Euro;12
	repl_args 1 1
.o 2 0
agEq_Euro;12.13
.d 2 0
	jsr eagEq_Euro;12.13
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_cashModel_dgEq_Euro;12
.o 1 0
e_cashModel_ngEq_Euro;12
	push_node _cycle_in_spine 2
.d 2 0
	jsr eagEq_Euro;12.13
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
eagEq_Euro;12.13
.o 2 0
e_cashModel_sgEq_Euro;12
.o 2 0
sgEq_Euro;12.13
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	toGenericEuro;28
			||	x2
	push_a 1
	build _ 1 ntoGenericEuro;28.28
			||	toGenericEuro;28
			||	x1
	push_a 1
	build _ 1 ntoGenericEuro;28.28
			||	gEq_PAIR;8
			||	gEq_FIELD;12
			||	gEq_Int;2
	buildh e_GenEq_dgEq_Int;2 0
	buildh e_GenEq_dgEq_FIELD;12 1
			||	gEq_FIELD;12
			||	gEq_Int;2
	buildh e_GenEq_dgEq_Int;2 0
	buildh e_GenEq_dgEq_FIELD;12 1
	buildh e_GenEq_dgEq_PAIR;8 2
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 3 0
	jmp e_GenEq_sgEq_RECORD;11
.n 1 _ eatoGenericEuro;28.28
.o 1 0
ntoGenericEuro;28.28
	push_node _cycle_in_spine 1
.o 2 0
eatoGenericEuro;28.28
	jsr_eval 0
	repl_r_args 2 0
.o 3 0
stoGenericEuro;28.28
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	PAIR
			||	FIELD
			||	x12
	push_a 1
	buildh e_StdGeneric_dFIELD 1
			||	FIELD
			||	x11
	push_a 1
	buildh e_StdGeneric_dFIELD 1
	buildh e_StdGeneric_dPAIR 2
	fillh e_StdGeneric_dRECORD 1 3
	pop_a 2
.d 1 0
	rtn
.export e_cashModel_s-;7
.descexp e_cashModel_d-;7 e_cashModel_n-;7 e_cashModel_l-;7 2 0 "-;7"
.a 0 a-;7.8
.o 2 0
e_cashModel_l-;7
	repl_args 1 1
.o 2 0
a-;7.8
.d 2 0
	jsr ea-;7.8
.o 2 0
	build_r e_cashModel_rEuro 2 0 0 0
	updatepop_a 0 2
.d 1 0
	rtn
.n 2 e_cashModel_d-;7
.o 1 0
e_cashModel_n-;7
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea-;7.8
.o 2 0
	fill_r e_cashModel_rEuro 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.o 2 0
ea-;7.8
	jsr_eval 1
	jsr_eval 0
	push_r_args 1 2 0
	push_r_args 2 2 0
	update_a 3 5
	update_a 1 3
	update_a 2 4
	update_a 0 2
	pop_a 2
.o 4 0
e_cashModel_s-;7
.o 4 0
s-;7.8
			||	Match code, stacksizes A: 4 B: 0
			||	Node definition c: _f0 (shared or annotated)
			||	cent
	push_a 3
			||	euro
	push_a 3
			||	cent
	push_a 3
			||	euro
	push_a 3
			||	euro
	push_a 6
			||	euro
	push_a 5
	build _ 6 n_f0.84
			||	Building the contractum, Stacksizes A: 5 B: 0
			||	_f1
			||	c: _f0
	push_a 0
	build _ 1 n_f1.85
			||	/;10
			||	100
	buildI 100
			||	c: _f0
	push_a 2
	build _ 2 e_StdInt_n/;10
	update_a 1 6
	updatepop_a 0 5
.d 2 0
	rtn
.n 1 _ ea_f1.85
.o 1 0
n_f1.85
	push_node _cycle_in_spine 1
.o 2 0
ea_f1.85
.o 2 0
s_f1.85
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	abs;13
			||	_
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
			||	Remove unused stack elements
	pop_a 1
.d 0 1 i
	jsr e_StdInt_sabs;13
.o 0 1 i
			||	100
	pushI 100
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	remI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.n 6 _ ea_f0.84
.o 1 0
n_f0.84
	push_node _cycle_in_spine 6
.o 7 0
ea_f0.84
.o 7 0
s_f0.84
			||	Match code, stacksizes A: 6 B: 0
			||	Building the contractum, Stacksizes A: 6 B: 0
			||	*;9
			||	_
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
			||	sign;14
			||	_
	push_a 4
	jsr_eval 0
	pushI_a 5
	pop_a 1
			||	Remove unused stack elements
			||	_
	buildh _Nil 0
	update_a 0 5
			||	_
	update_a 0 6
	pop_a 1
.d 0 1 i
	jsr e_StdInt_ssign;14
.o 0 1 i
	mulI
			||	+;6
			||	*;9
			||	_
	push_a 3
	jsr_eval 0
	pushI_a 4
	pop_a 1
			||	sign;14
			||	_
	push_a 2
	jsr_eval 0
	pushI_a 3
	pop_a 1
			||	Remove unused stack elements
	update_a 1 5
	update_a 0 4
	pop_a 4
.d 0 1 i
	jsr e_StdInt_ssign;14
.o 0 1 i
	mulI
			||	*;9
			||	-;7
			||	_
	push_a 1
	jsr_eval 0
	pushI_a 2
	pop_a 1
			||	_
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	subI
			||	100
	pushI 100
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	mulI
	addI
	pop_a 2
	subI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_cashModel_seuro;2
.descexp e_cashModel_deuro;2 e_cashModel_neuro;2 e_cashModel_leuro;2 1 0 "euro;2"
.o 2 0
e_cashModel_leuro;2
	pop_a 1
.d 1 0
	jsr eaeuro;2.3
.o 2 0
	build_r e_cashModel_rEuro 2 0 0 0
	updatepop_a 0 2
.d 1 0
	rtn
.n 1 e_cashModel_deuro;2
.o 1 0
e_cashModel_neuro;2
	push_node _cycle_in_spine 1
.d 1 0
	jsr eaeuro;2.3
.o 2 0
	fill_r e_cashModel_rEuro 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.o 1 0
e_cashModel_seuro;2
.o 1 0
eaeuro;2.3
	jsr_eval 0
	repl_r_args 2 0
.o 2 0
seuro;2.3
			||	Match code, stacksizes A: 2 B: 0
			||	Redirecting the root to: e
.d 2 0
	rtn
.n 0 _
.o 1 0
nStart.18
	push_node _cycle_in_spine 0
.o 0 0
eaStart.18
			||	Match code, stacksizes A: 0 B: 0
			||	Building the contractum, Stacksizes A: 0 B: 0
	pushI 3
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_cashModel_smodel
.descexp e_cashModel_dmodel e_cashModel_nmodel e_cashModel_lmodel 2 0 "model"
.a 0 amodel.1
.o 2 0
e_cashModel_lmodel
	repl_args 1 1
.o 2 0
amodel.1
.d 2 0
	jsr eamodel.1
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 2 e_cashModel_dmodel
.o 1 0
e_cashModel_nmodel
	push_node _cycle_in_spine 2
.d 2 0
	jsr eamodel.1
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 2 0
e_cashModel_smodel
.o 2 0
eamodel.1
	jsr_eval 1
.o 2 0
smodel.1
			||	Match code, stacksizes A: 2 B: 0
	pushD_a 1
	eqD_b e_cashModel_dAdd 1
	jmp_true case.1
	eqD_b e_cashModel_dRem 1
	jmp_true case.2
	jmp case.3
case.1
	pop_b 1
	push_args 1 1 1
	buildh _Nil 0
	update_a 0 3
	pop_a 1
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	[...|...]
			||	[]
	buildh _Nil 0
			||	euro;1
			||	p
	push_a 1
	build e_cashModel_deuro;1 1 e_cashModel_neuro;1
	buildh _Cons 2
			||	[...|...]
			||	list
	push_a 2
			||	p
	push_a 2
	buildh _Cons 2
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	rtn
case.2
	pop_b 1
	push_args 1 1 1
	buildh _Nil 0
	update_a 0 3
	pop_a 1
			||	list
	push_a 1
	jsr_eval 0
			||	Eq;
			||	==;
			||	==;11
	buildh e_cashModel_d==;11 0
			||	p
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
.d 3 0
	jsr e_StdList_sisMember
.o 0 1 b
	jmp_false else.4
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	[...|...]
			||	[]
	buildh _Nil 0
			||	_f3
			||	p
	push_a 1
	build _ 1 n_f3.87
	buildh _Cons 2
			||	_f2
			||	list
	push_a 2
			||	p
	push_a 2
	build _ 2 n_f2.86
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	rtn
else.4
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	[]
	buildh _Nil 0
			||	list
	push_a 2
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	rtn
case.3
	pop_b 1
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	[...|...]
			||	[]
	buildh _Nil 0
			||	euro;83
			||	list
	push_a 1
	build _ 1 neuro;83.30
	buildh _Cons 2
			||	[]
	buildh _Nil 0
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	rtn
.n 1 _ ea_f3.87
.o 1 0
n_f3.87
	push_node _cycle_in_spine 1
.o 2 0
ea_f3.87
.o 2 0
s_f3.87
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	euro;1
			||	_
	push_a 0
	jsr_eval 0
			||	Remove unused stack elements
	updatepop_a 0 1
.d 1 0
	jsr seuro;1.2
.o 2 0
.d 2 0
	jsr s~;9.10
.o 2 0
	fill_r e_cashModel_rEuro 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.n 2 _ ea_f2.86
.o 1 0
n_f2.86
	push_node _cycle_in_spine 2
.o 3 0
ea_f2.86
.o 3 0
s_f2.86
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	_
	push_a 1
	jsr_eval 0
			||	Eq;
			||	==;
			||	==;11
	buildh e_cashModel_d==;11 0
			||	_
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 4 0
	jmp e_StdList_sremoveMember
.n 1 _
.o 1 0
neuro;83.30
	push_node _cycle_in_spine 1
.d 1 0
	jsr eaeuro;83.30
.o 2 0
	fill_r e_cashModel_rEuro 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.o 1 0
eaeuro;83.30
	jsr_eval 0
.o 1 0
seuro;83.30
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	map
			||	euro;1
	buildh e_cashModel_deuro;1 0
	create
			||	l
	push_a 2
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr e_StdList_smap
.o 1 0
			||	zero;
			||	zero;8
			||	Remove unused stack elements
.d 0 0
	jsr szero;8.9
.o 2 0
	build_r e_cashModel_rEuro 2 0 0 0
	updatepop_a 0 2
			||	+;
			||	+;6
	buildh e_cashModel_d+;6 0
.d 3 0
	jsr e_StdList_ssum
.o 1 0
	repl_r_args 2 0
.d 2 0
	rtn
.export e_cashModel_s==;11
.descexp e_cashModel_d==;11 e_cashModel_n==;11 e_cashModel_l==;11 2 0 "==;11"
.a 0 a==;11.12
.o 2 0
e_cashModel_l==;11
	repl_args 1 1
.o 2 0
a==;11.12
.d 2 0
	jsr ea==;11.12
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_cashModel_d==;11
.o 1 0
e_cashModel_n==;11
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea==;11.12
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea==;11.12
	jsr_eval 1
	jsr_eval 0
.o 2 0
e_cashModel_s==;11
.o 2 0
s==;11.12
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	gEq_s;
			||	gEq_Product;20
	buildh dgEq_Product;20.21 0
			||	q
	push_a 2
			||	p
	push_a 2
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 3 0
	jmp e_GenEq_s===
.desc dgEq_Product;20.21 _hnf lgEq_Product;20.21 2 0 "gEq_Product;20"
.a 0 agEq_Product;20.21
.o 2 0
lgEq_Product;20.21
	repl_args 1 1
.o 2 0
agEq_Product;20.21
.d 2 0
	jsr eagEq_Product;20.21
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
eagEq_Product;20.21
.o 2 0
sgEq_Product;20.21
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	toGenericProduct;39
			||	x2
	push_a 1
	build _ 1 ntoGenericProduct;39.29
			||	toGenericProduct;39
			||	x1
	push_a 1
	build _ 1 ntoGenericProduct;39.29
			||	gEq_EITHER;9
			||	gEq_EITHER;9
			||	gEq_CONS;10
			||	gEq_UNIT;7
	buildh e_GenEq_dgEq_UNIT;7 0
	buildh e_GenEq_dgEq_CONS;10 1
			||	gEq_CONS;10
			||	gEq_UNIT;7
	buildh e_GenEq_dgEq_UNIT;7 0
	buildh e_GenEq_dgEq_CONS;10 1
	buildh e_GenEq_dgEq_EITHER;9 2
			||	gEq_CONS;10
			||	gEq_UNIT;7
	buildh e_GenEq_dgEq_UNIT;7 0
	buildh e_GenEq_dgEq_CONS;10 1
	buildh e_GenEq_dgEq_EITHER;9 2
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 3 0
	jmp e_GenEq_sgEq_OBJECT;13
.n 1 _ eatoGenericProduct;39.29
.o 1 0
ntoGenericProduct;39.29
	push_node _cycle_in_spine 1
.o 2 0
eatoGenericProduct;39.29
	jsr_eval 0
.o 2 0
stoGenericProduct;39.29
			||	Match code, stacksizes A: 1 B: 0
	pushD_a 0
	eqD_b e_cashModel_dPizza 0
	jmp_true case.5
	eqD_b e_cashModel_dBeer 0
	jmp_true case.6
	jmp case.7
case.5
	pop_b 1
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	LEFT
			||	CONS
			||	UNIT
	buildh e_StdGeneric_dUNIT 0
	buildh e_StdGeneric_dCONS 1
	buildh e_StdGeneric_dLEFT 1
	fillh e_StdGeneric_dOBJECT 1 2
	pop_a 1
.d 1 0
	rtn
case.6
	pop_b 1
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	RIGHT
			||	LEFT
			||	CONS
			||	UNIT
	buildh e_StdGeneric_dUNIT 0
	buildh e_StdGeneric_dCONS 1
	buildh e_StdGeneric_dLEFT 1
	buildh e_StdGeneric_dRIGHT 1
	fillh e_StdGeneric_dOBJECT 1 2
	pop_a 1
.d 1 0
	rtn
case.7
	pop_b 1
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	RIGHT
			||	RIGHT
			||	CONS
			||	UNIT
	buildh e_StdGeneric_dUNIT 0
	buildh e_StdGeneric_dCONS 1
	buildh e_StdGeneric_dRIGHT 1
	buildh e_StdGeneric_dRIGHT 1
	fillh e_StdGeneric_dOBJECT 1 2
	pop_a 1
.d 1 0
	rtn
.export e_cashModel_s~;9
.descexp e_cashModel_d~;9 e_cashModel_n~;9 e_cashModel_l~;9 1 0 "~;9"
.o 2 0
e_cashModel_l~;9
	pop_a 1
.d 1 0
	jsr ea~;9.10
.o 2 0
	build_r e_cashModel_rEuro 2 0 0 0
	updatepop_a 0 2
.d 1 0
	rtn
.n 1 e_cashModel_d~;9
.o 1 0
e_cashModel_n~;9
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea~;9.10
.o 2 0
	fill_r e_cashModel_rEuro 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.o 1 0
ea~;9.10
	jsr_eval 0
	repl_r_args 2 0
.o 2 0
e_cashModel_s~;9
.o 2 0
s~;9.10
			||	Match code, stacksizes A: 2 B: 0
			||	~;15
			||	euro
	push_a 0
	build _ 1 e_StdInt_n~;15
			||	e
	push_a 2
	push_a 2
	update_a 2 0
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	rtn
.export e_cashModel_seuro;5
.descexp e_cashModel_deuro;5 e_cashModel_neuro;5 e_cashModel_leuro;5 2 0 "euro;5"
.a 0 aeuro;5.6
.o 2 0
e_cashModel_leuro;5
	repl_args 1 1
.o 2 0
aeuro;5.6
.d 2 0
	jsr eaeuro;5.6
.o 2 0
	build_r e_cashModel_rEuro 2 0 0 0
	updatepop_a 0 2
.d 1 0
	rtn
.n 2 e_cashModel_deuro;5
.o 1 0
e_cashModel_neuro;5
	push_node _cycle_in_spine 2
.d 2 0
	jsr eaeuro;5.6
.o 2 0
	fill_r e_cashModel_rEuro 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.o 2 0
e_cashModel_seuro;5
	jsr_eval 1
.d 2 0
	jmp seuro;5.6
.o 2 0
eaeuro;5.6
	jsr_eval 1
	jsr_eval 0
	repl_r_args 1 0
.o 2 0
seuro;5.6
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	map
			||	euro
	push_a 0
	create
			||	l
	push_a 3
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 3 0
	jsr e_StdList_smap
.o 1 0
			||	zero;
			||	zero;8
			||	Remove unused stack elements
.d 0 0
	jsr szero;8.9
.o 2 0
	build_r e_cashModel_rEuro 2 0 0 0
	updatepop_a 0 2
			||	+;
			||	+;6
	buildh e_cashModel_d+;6 0
.d 3 0
	jsr e_StdList_ssum
.o 1 0
	repl_r_args 2 0
.d 2 0
	rtn
.export e_cashModel_szero;8
.descexp e_cashModel_dzero;8 e_cashModel_nzero;8 e_cashModel_lzero;8 0 0 "zero;8"
.o 1 0
e_cashModel_lzero;8
	halt
.n 0 e_cashModel_dzero;8
.o 1 0
e_cashModel_nzero;8
	push_node _cycle_in_spine 0
.d 0 0
	jsr eazero;8.9
.o 2 0
	fill_r e_cashModel_rEuro 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.o 0 0
eazero;8.9
.o 0 0
e_cashModel_szero;8
.o 0 0
szero;8.9
			||	Match code, stacksizes A: 0 B: 0
			||	Building the contractum, Stacksizes A: 0 B: 0
			||	0
	buildI 0
			||	0
	buildI 0
.d 2 0
	rtn
.export e_cashModel_s+;6
.descexp e_cashModel_d+;6 e_cashModel_n+;6 e_cashModel_l+;6 2 0 "+;6"
.a 0 a+;6.7
.o 2 0
e_cashModel_l+;6
	repl_args 1 1
.o 2 0
a+;6.7
.d 2 0
	jsr ea+;6.7
.o 2 0
	build_r e_cashModel_rEuro 2 0 0 0
	updatepop_a 0 2
.d 1 0
	rtn
.n 2 e_cashModel_d+;6
.o 1 0
e_cashModel_n+;6
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea+;6.7
.o 2 0
	fill_r e_cashModel_rEuro 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.o 2 0
ea+;6.7
	jsr_eval 1
	jsr_eval 0
	push_r_args 1 2 0
	push_r_args 2 2 0
	update_a 3 5
	update_a 1 3
	update_a 2 4
	update_a 0 2
	pop_a 2
.o 4 0
e_cashModel_s+;6
.o 4 0
s+;6.7
			||	Match code, stacksizes A: 4 B: 0
			||	Node definition c: _f4 (shared or annotated)
			||	cent
	push_a 3
			||	euro
	push_a 3
			||	cent
	push_a 3
			||	euro
	push_a 3
			||	euro
	push_a 6
			||	euro
	push_a 5
	build _ 6 n_f4.88
			||	Building the contractum, Stacksizes A: 5 B: 0
			||	_f5
			||	c: _f4
	push_a 0
	build _ 1 n_f5.89
			||	/;10
			||	100
	buildI 100
			||	c: _f4
	push_a 2
	build _ 2 e_StdInt_n/;10
	update_a 1 6
	updatepop_a 0 5
.d 2 0
	rtn
.n 1 _ ea_f5.89
.o 1 0
n_f5.89
	push_node _cycle_in_spine 1
.o 2 0
ea_f5.89
.o 2 0
s_f5.89
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	abs;13
			||	_
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
			||	Remove unused stack elements
	pop_a 1
.d 0 1 i
	jsr e_StdInt_sabs;13
.o 0 1 i
			||	100
	pushI 100
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	remI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.n 6 _ ea_f4.88
.o 1 0
n_f4.88
	push_node _cycle_in_spine 6
.o 7 0
ea_f4.88
.o 7 0
s_f4.88
			||	Match code, stacksizes A: 6 B: 0
			||	Building the contractum, Stacksizes A: 6 B: 0
			||	*;9
			||	_
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
			||	sign;14
			||	_
	push_a 4
	jsr_eval 0
	pushI_a 5
	pop_a 1
			||	Remove unused stack elements
			||	_
	buildh _Nil 0
	update_a 0 5
			||	_
	update_a 0 6
	pop_a 1
.d 0 1 i
	jsr e_StdInt_ssign;14
.o 0 1 i
	mulI
			||	+;6
			||	*;9
			||	_
	push_a 3
	jsr_eval 0
	pushI_a 4
	pop_a 1
			||	sign;14
			||	_
	push_a 2
	jsr_eval 0
	pushI_a 3
	pop_a 1
			||	Remove unused stack elements
	update_a 1 5
	update_a 0 4
	pop_a 4
.d 0 1 i
	jsr e_StdInt_ssign;14
.o 0 1 i
	mulI
			||	*;9
			||	+;6
			||	_
	push_a 1
	jsr_eval 0
	pushI_a 2
	pop_a 1
			||	_
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	addI
			||	100
	pushI 100
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	mulI
	addI
	pop_a 2
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_cashModel_seuro;1
.descexp e_cashModel_deuro;1 e_cashModel_neuro;1 e_cashModel_leuro;1 1 0 "euro;1"
.o 2 0
e_cashModel_leuro;1
	pop_a 1
.d 1 0
	jsr eaeuro;1.2
.o 2 0
	build_r e_cashModel_rEuro 2 0 0 0
	updatepop_a 0 2
.d 1 0
	rtn
.n 1 e_cashModel_deuro;1
.o 1 0
e_cashModel_neuro;1
	push_node _cycle_in_spine 1
.d 1 0
	jsr eaeuro;1.2
.o 2 0
	fill_r e_cashModel_rEuro 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.o 1 0
e_cashModel_seuro;1
.o 1 0
eaeuro;1.2
	jsr_eval 0
.o 1 0
seuro;1.2
			||	Match code, stacksizes A: 1 B: 0
	pushD_a 0
	eqD_b e_cashModel_dPizza 0
	jmp_true case.8
	eqD_b e_cashModel_dBeer 0
	jmp_true case.9
	pop_b 1
	jmp case.10
case.8
	pop_b 1
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	(...)
			||	99
	buildI 99
			||	4
	buildI 4
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jmp seuro;4.5
case.9
	pop_b 1
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	(...)
			||	65
	buildI 65
			||	0
	buildI 0
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jmp seuro;4.5
case.10
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	1
	buildI 1
	updatepop_a 0 1
.d 1 0
	jmp seuro;3.4
.export e_cashModel_seuro;4
.descexp e_cashModel_deuro;4 e_cashModel_neuro;4 e_cashModel_leuro;4 1 0 "euro;4"
.o 2 0
e_cashModel_leuro;4
	pop_a 1
.d 1 0
	jsr eaeuro;4.5
.o 2 0
	build_r e_cashModel_rEuro 2 0 0 0
	updatepop_a 0 2
.d 1 0
	rtn
.n 1 e_cashModel_deuro;4
.o 1 0
e_cashModel_neuro;4
	push_node _cycle_in_spine 1
.d 1 0
	jsr eaeuro;4.5
.o 2 0
	fill_r e_cashModel_rEuro 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.o 1 0
e_cashModel_seuro;4
.o 1 0
eaeuro;4.5
	jsr_eval 0
	repl_args 2 2
.o 2 0
seuro;4.5
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	c
	push_a 1
			||	e
	push_a 1
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	rtn
.export e_cashModel_seuro;3
.descexp e_cashModel_deuro;3 e_cashModel_neuro;3 e_cashModel_leuro;3 1 0 "euro;3"
.o 2 0
e_cashModel_leuro;3
	pop_a 1
.d 1 0
	jsr eaeuro;3.4
.o 2 0
	build_r e_cashModel_rEuro 2 0 0 0
	updatepop_a 0 2
.d 1 0
	rtn
.n 1 e_cashModel_deuro;3
.o 1 0
e_cashModel_neuro;3
	push_node _cycle_in_spine 1
.d 1 0
	jsr eaeuro;3.4
.o 2 0
	fill_r e_cashModel_rEuro 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.o 1 0
eaeuro;3.4
.o 1 0
e_cashModel_seuro;3
.o 1 0
seuro;3.4
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	0
	buildI 0
			||	e
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
