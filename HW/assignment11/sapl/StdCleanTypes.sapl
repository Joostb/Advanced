|| ?module? StdCleanTypes


StdCleanTypes.cast !a_0 = error "no AnyCodeExpr"
StdCleanTypes.CTToCons !a_0 = StdCleanTypes._CTCons (StdCleanTypes.cast a_0)
StdCleanTypes.getDescriptor::I !_x_0 = error "no AnyCodeExpr"
StdCleanTypes.descriptorIDtoString !id_0::I = error "no AnyCodeExpr"
StdCleanTypes.toString_1 !_x_0 = case _x_0 (StdCleanTypes._CTCons cons_1_0 -> StdCleanTypes.descriptorIDtoString (StdCleanTypes.getDescriptor cons_1_0)) 
<{StdCleanTypes.TD;CTTypeRHS}> _x_0::B = _predefined._Nil
<{StdCleanTypes.TD;CTConsDef}> _x_0::B = _predefined._Nil
<{StdCleanTypes.TD;CTFixity}> _x_0::B = _predefined._Nil
<{StdCleanTypes.TD;CTFieldDef}> _x_0::B = _predefined._Nil
<{StdCleanTypes.TD;CTTypeDef}> _x_0::B = _predefined._Nil
<{StdCleanTypes.TD;CTCons}> _x_0::B = _predefined._Nil
<{StdCleanTypes.TD;List}> _x_0::B = _predefined._Nil

:: StdCleanTypes.CTTypeRHS = StdCleanTypes.CTAlgType a1 | StdCleanTypes.CTRecordType a1 | StdCleanTypes.CTSynType | StdCleanTypes.CTPredefined
:: StdCleanTypes.CTFixity = StdCleanTypes.CTFixNone | StdCleanTypes.CTFixLeft | StdCleanTypes.CTFixRight
:: StdCleanTypes.List = StdCleanTypes.Nil | StdCleanTypes.Cons a1 a2

|| Converted Records
:: StdCleanTypes._CTConsDef = {!StdCleanTypes.cd_cons, !StdCleanTypes.cd_args, !StdCleanTypes.cd_exist::I}

:: StdCleanTypes._CTFieldDef = {!StdCleanTypes.fd_name, !StdCleanTypes.fd_exist::I, !StdCleanTypes.fd_type}

:: StdCleanTypes._CTTypeDef = {!StdCleanTypes.td_name, !StdCleanTypes.td_arity::I, !StdCleanTypes.td_unq::B, !StdCleanTypes.td_rhs}

:: StdCleanTypes._CTCons = {!StdCleanTypes.cons}

