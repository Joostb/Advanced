.comp 920 100111010
.start __assignment9_Start
.depend "Text" "20160927153534"
.depend "TCPStringChannelsInternal" "20111221112712"
.depend "TCPStringChannels" "20111221112712"
.depend "TCPEvent" "20111221112712"
.depend "tcp_bytestreams" "20111221112712"
.depend "TCPDef" "20111221112712"
.depend "TCPChannels" "20160927153524"
.depend "tcp" "20111221112712"
.depend "StdMaybe" "20160927153526"
.depend "TCPChannelClass" "20111221112712"
.depend "TCPIP" "20111221112712"
.depend "Sapl.SaplStruct" "20160927153540"
.depend "Sapl.SaplParser" "20160927153540"
.depend "Sapl.Target.Flavour" "20160927153540"
.depend "Text.StringAppender" "20160927153534"
.depend "Text.Unicode.UChar" "20160927153534"
.depend "Text.Unicode" "20160927153534"
.depend "Sapl.SaplTokenizer" "20160927153540"
.depend "Sapl.Linker.SaplLinkerShared" "20160927153540"
.depend "Sapl.Linker.LazyLinker" "20160927153540"
.depend "iTasks._Framework.Serialization" "20160927153526"
.depend "_SystemEnum" "20111221112712"
.depend "StdEnum" "20111221112712"
.depend "StdTuple" "20111221112712"
.depend "StdOrdList" "20111221112712"
.depend "iTasks.API.Extensions.Admin.WorkflowAdmin" "20160927153524"
.depend "iTasks.API.Extensions.User" "20160927153526"
.depend "iTasks.API.Extensions.Admin.UserAdmin" "20160927153524"
.depend "iTasks.API.Common.SDSCombinators" "20160927153524"
.depend "iTasks.API.Core.SDSCombinators" "20160927153524"
.depend "iTasks.API.Core.SDSs" "20160927153524"
.depend "iTasks.API.Common.TaskCombinators" "20160927153524"
.depend "iTasks.API.Common.ExportTasks" "20160927153524"
.depend "iTasks.API.Common.ImportTasks" "20160927153524"
.depend "iTasks.API.Common.DBTasks" "20160927153524"
.depend "iTasks.API.Common.InteractionTasks" "20160927153524"
.depend "Text.URI" "20160927153534"
.depend "iTasks.API.Core.IntegrationTasks" "20160927153524"
.depend "iTasks.API.Core.OptimizedCoreTasks" "20160927153524"
.depend "iTasks.API.Core.Tasks" "20160927153524"
.depend "iTasks.API" "20160927153524"
.depend "Internet.HTTP" "20160927153534"
.depend "System.OS" "20160927153534"
.depend "iTasks._Framework.Engine" "20160927153526"
.depend "iTasks" "20160927153524"
.depend "iTasks.UI.JS.Interface" "20160927153526"
.depend "GenLexOrd" "20160927153524"
.depend "System.OSError" "20160927153534"
.depend "System.File" "20160927153534"
.depend "iTasks._Framework.Generic.Defaults" "20160927153526"
.depend "iTasks._Framework.Generic.Visualization" "20160927153526"
.depend "Data.IntMap.Base" "20160927153534"
.depend "Data.IntMap.Strict" "20160927153534"
.depend "Data.CircularStack" "20160927153534"
.depend "iTasks.API.Core.TaskCombinators" "20160927153524"
.depend "iTasks.UI.Layout" "20160927153526"
.depend "Data.Queue" "20160927153534"
.depend "Text.HTML" "20160927153534"
.depend "iTasks.UI.Definition" "20160927153526"
.depend "iTasks.UI.Diff" "20160927153526"
.depend "iTasks._Framework.TaskState" "20160927153526"
.depend "iTasks._Framework.Tonic.AbsSyn" "20160927153526"
.depend "iTasks._Framework.Task" "20160927153526"
.depend "Data.Either" "20160927153534"
.depend "iTasks._Framework.SDS" "20160927153526"
.depend "Data.Error" "20160927153534"
.depend "iTasks._Framework.Store" "20160927153526"
.depend "iTasks.API.Core.Types" "20160927153524"
.depend "System.Time" "20160927153534"
.depend "StdFile" "20111221112712"
.depend "Data.Set" "20160927153534"
.depend "Data.List" "20160927153534"
.depend "StdString" "20111221112712"
.depend "Text.JSON" "20160927153534"
.depend "StdFunc" "20111221112712"
.depend "GenEq" "20160927153524"
.depend "Data.Monoid" "20160927153534"
.depend "Control.Monad" "20160927153534"
.depend "Control.Applicative" "20160927153534"
.depend "System.IO" "20160927153534"
.depend "Data.Functor" "20160927153534"
.depend "Data.Maybe" "20160927153534"
.depend "Data.Map" "20160927153534"
.depend "Data.Void" "20160927153534"
.depend "System.FilePath" "20160927153534"
.depend "iTasks._Framework.IWorld" "20160927153526"
.depend "StdGeneric" "20160927153524"
.depend "iTasks._Framework.Generic.Interaction" "20160927153526"
.depend "iTasks._Framework.Generic" "20160927153526"
.depend "Data.Tuple" "20160927153534"
.depend "StdReal" "20111221112712"
.depend "StdChar" "20111221112712"
.depend "StdInt" "20111221112712"
.depend "StdBool" "20111221112712"
.depend "StdClass" "20111221112712"
.depend "StdList" "20111221112712"
.depend "StdMisc" "20111221112712"
.depend "StdCleanTypes" "20111221112714"
.depend "StdOverloaded" "20111221112712"
.depend "_SystemDynamic" "20160927153524"
.module m_assignment9 "assignment9" "20161121224510"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
||	Concurrent Clean Code Generator (Version 0.920)
.impmod Data.List
.implab e_Data.List_sdifference
.implab e_Data.List_sintersect
.implab e_Data.List_sunion
.impmod StdString
.impdesc e_StdString_d<;3
.implab e_StdString_s<;3
.impmod Control.Applicative
.implab e_Control.Applicative_s*>
.impdesc e_Control.Applicative_rApplicative;
.impmod Data.Functor
.impdesc e_Data.Functor_rFunctor;
.impmod Data.Maybe
.impdesc e_Data.Maybe_dNothing
.impdesc e_Data.Maybe_dJust
.impmod Data.Map
.implab e_Data.Map_snewMap
.implab e_Data.Map_sput
.impdesc e_Data.Map_kBin
.impdesc e_Data.Map_dTip
.impmod StdInt
.impdesc e_StdInt_d==;16
.impdesc e_StdInt_d<;17
.impmod StdList
.impdesc e_StdList_d++
.impdesc e_StdList_dlength;47
.impmod StdOverloaded
.impdesc e_StdOverloaded_r==;
.impdesc e_StdOverloaded_r<;
.desc dI _hnf _add_arg 1 0 "I"
.desc dS _hnf _add_arg 1 0 "S"
.desc dSem _hnf _add_arg 1 0 "Sem"
.desc0 dTHEN 0 "THEN"
.desc0 dELSE 0 "ELSE"
.desc0 dDO 0 "DO"
.record rAssign; a 1 0 "Assign;"
.record rvariable; a 1 0 "variable;"
.export __assignment9_Start
.o 0 0
__assignment9_Start
	build _ 0 nStart.32
.d 1 0
	jmp _driver
.export e_assignment9_sTD;variable;
.export e_assignment9_eaTD;variable;
.descexp e_assignment9_dTD;variable; e_assignment9_nTD;variable; e_assignment9_lTD;variable; 1 0 "TD;variable;"
.o 2 0
e_assignment9_lTD;variable;
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_assignment9_eaTD;variable;
.n 1 e_assignment9_dTD;variable; e_assignment9_eaTD;variable;
.o 1 0
e_assignment9_nTD;variable;
	push_node _cycle_in_spine 1
.o 2 0
e_assignment9_eaTD;variable;
.o 2 0
e_assignment9_sTD;variable;
.o 2 0
sTD;variable;.67
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_assignment9_sTD;Assign;
.export e_assignment9_eaTD;Assign;
.descexp e_assignment9_dTD;Assign; e_assignment9_nTD;Assign; e_assignment9_lTD;Assign; 1 0 "TD;Assign;"
.o 2 0
e_assignment9_lTD;Assign;
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_assignment9_eaTD;Assign;
.n 1 e_assignment9_dTD;Assign; e_assignment9_eaTD;Assign;
.o 1 0
e_assignment9_nTD;Assign;
	push_node _cycle_in_spine 1
.o 2 0
e_assignment9_eaTD;Assign;
.o 2 0
e_assignment9_sTD;Assign;
.o 2 0
sTD;Assign;.66
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_assignment9_sTD;DO
.export e_assignment9_eaTD;DO
.descexp e_assignment9_dTD;DO e_assignment9_nTD;DO e_assignment9_lTD;DO 1 0 "TD;DO"
.o 2 0
e_assignment9_lTD;DO
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_assignment9_eaTD;DO
.n 1 e_assignment9_dTD;DO e_assignment9_eaTD;DO
.o 1 0
e_assignment9_nTD;DO
	push_node _cycle_in_spine 1
.o 2 0
e_assignment9_eaTD;DO
.o 2 0
e_assignment9_sTD;DO
.o 2 0
sTD;DO.65
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_assignment9_sTD;ELSE
.export e_assignment9_eaTD;ELSE
.descexp e_assignment9_dTD;ELSE e_assignment9_nTD;ELSE e_assignment9_lTD;ELSE 1 0 "TD;ELSE"
.o 2 0
e_assignment9_lTD;ELSE
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_assignment9_eaTD;ELSE
.n 1 e_assignment9_dTD;ELSE e_assignment9_eaTD;ELSE
.o 1 0
e_assignment9_nTD;ELSE
	push_node _cycle_in_spine 1
.o 2 0
e_assignment9_eaTD;ELSE
.o 2 0
e_assignment9_sTD;ELSE
.o 2 0
sTD;ELSE.64
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_assignment9_sTD;THEN
.export e_assignment9_eaTD;THEN
.descexp e_assignment9_dTD;THEN e_assignment9_nTD;THEN e_assignment9_lTD;THEN 1 0 "TD;THEN"
.o 2 0
e_assignment9_lTD;THEN
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_assignment9_eaTD;THEN
.n 1 e_assignment9_dTD;THEN e_assignment9_eaTD;THEN
.o 1 0
e_assignment9_nTD;THEN
	push_node _cycle_in_spine 1
.o 2 0
e_assignment9_eaTD;THEN
.o 2 0
e_assignment9_sTD;THEN
.o 2 0
sTD;THEN.63
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_assignment9_sTD;Sem
.export e_assignment9_eaTD;Sem
.descexp e_assignment9_dTD;Sem e_assignment9_nTD;Sem e_assignment9_lTD;Sem 1 0 "TD;Sem"
.o 2 0
e_assignment9_lTD;Sem
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_assignment9_eaTD;Sem
.n 1 e_assignment9_dTD;Sem e_assignment9_eaTD;Sem
.o 1 0
e_assignment9_nTD;Sem
	push_node _cycle_in_spine 1
.o 2 0
e_assignment9_eaTD;Sem
.o 2 0
e_assignment9_sTD;Sem
.o 2 0
sTD;Sem.62
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_assignment9_sTD;State
.export e_assignment9_eaTD;State
.descexp e_assignment9_dTD;State e_assignment9_nTD;State e_assignment9_lTD;State 1 0 "TD;State"
.o 2 0
e_assignment9_lTD;State
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_assignment9_eaTD;State
.n 1 e_assignment9_dTD;State e_assignment9_eaTD;State
.o 1 0
e_assignment9_nTD;State
	push_node _cycle_in_spine 1
.o 2 0
e_assignment9_eaTD;State
.o 2 0
e_assignment9_sTD;State
.o 2 0
sTD;State.61
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_assignment9_sTD;Val
.export e_assignment9_eaTD;Val
.descexp e_assignment9_dTD;Val e_assignment9_nTD;Val e_assignment9_lTD;Val 1 0 "TD;Val"
.o 2 0
e_assignment9_lTD;Val
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_assignment9_eaTD;Val
.n 1 e_assignment9_dTD;Val e_assignment9_eaTD;Val
.o 1 0
e_assignment9_nTD;Val
	push_node _cycle_in_spine 1
.o 2 0
e_assignment9_eaTD;Val
.o 2 0
e_assignment9_sTD;Val
.o 2 0
sTD;Val.60
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_assignment9_sTD;Variable
.export e_assignment9_eaTD;Variable
.descexp e_assignment9_dTD;Variable e_assignment9_nTD;Variable e_assignment9_lTD;Variable 1 0 "TD;Variable"
.o 2 0
e_assignment9_lTD;Variable
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_assignment9_eaTD;Variable
.n 1 e_assignment9_dTD;Variable e_assignment9_eaTD;Variable
.o 1 0
e_assignment9_nTD;Variable
	push_node _cycle_in_spine 1
.o 2 0
e_assignment9_eaTD;Variable
.o 2 0
e_assignment9_sTD;Variable
.o 2 0
sTD;Variable.59
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_assignment9_sTD;Set
.export e_assignment9_eaTD;Set
.descexp e_assignment9_dTD;Set e_assignment9_nTD;Set e_assignment9_lTD;Set 1 0 "TD;Set"
.o 2 0
e_assignment9_lTD;Set
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_assignment9_eaTD;Set
.n 1 e_assignment9_dTD;Set e_assignment9_eaTD;Set
.o 1 0
e_assignment9_nTD;Set
	push_node _cycle_in_spine 1
.o 2 0
e_assignment9_eaTD;Set
.o 2 0
e_assignment9_sTD;Set
.o 2 0
sTD;Set.58
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_assignment9_sTD;Element
.export e_assignment9_eaTD;Element
.descexp e_assignment9_dTD;Element e_assignment9_nTD;Element e_assignment9_lTD;Element 1 0 "TD;Element"
.o 2 0
e_assignment9_lTD;Element
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_assignment9_eaTD;Element
.n 1 e_assignment9_dTD;Element e_assignment9_eaTD;Element
.o 1 0
e_assignment9_nTD;Element
	push_node _cycle_in_spine 1
.o 2 0
e_assignment9_eaTD;Element
.o 2 0
e_assignment9_sTD;Element
.o 2 0
sTD;Element.57
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_assignment9_sTD;Ident
.export e_assignment9_eaTD;Ident
.descexp e_assignment9_dTD;Ident e_assignment9_nTD;Ident e_assignment9_lTD;Ident 1 0 "TD;Ident"
.o 2 0
e_assignment9_lTD;Ident
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_assignment9_eaTD;Ident
.n 1 e_assignment9_dTD;Ident e_assignment9_eaTD;Ident
.o 1 0
e_assignment9_nTD;Ident
	push_node _cycle_in_spine 1
.o 2 0
e_assignment9_eaTD;Ident
.o 2 0
e_assignment9_sTD;Ident
.o 2 0
sTD;Ident.56
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.n 0 _
.o 1 0
nStart.32
	push_node _cycle_in_spine 0
.d 0 0
	jsr eaStart.32
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 0 0
eaStart.32
.o 0 0
sStart.32
			||	Match code, stacksizes A: 0 B: 0
			||	Building the contractum, Stacksizes A: 0 B: 0
			||	expr10
	create
			||	Remove unused stack elements
.d 1 0
	jsr sexpr10.30
.o 1 0
.d 1 0
	jmp seval.12
.o 1 0
sexpr10.30
			||	Match code, stacksizes A: 0 B: 0
			||	Building the contractum, Stacksizes A: 0 B: 0
			||	=;43
			||	difference
			||	intersect
			||	insert
			||	new
	build _ 0 nnew.3
			||	variable;44
			||	z
	build _ 0 nz.20
	build _ 1 nvariable;44.45
	build _ 2 ninsert.5
			||	variable;45
			||	x
	build _ 0 nx.18
	build _ 1 nvariable;45.46
	build _ 2 nintersect.8
			||	variable;45
			||	x
	build _ 0 nx.18
	build _ 1 nvariable;45.46
	build _ 2 ndifference.9
			||	z
	build _ 0 nz.20
	build _ 2 n=.;43.44
			||	:
			||	WHILE
			||	=;43
			||	insert
			||	variable;45
			||	x
	build _ 0 nx.18
	build _ 1 nvariable;45.46
			||	size
			||	variable;45
			||	x
	build _ 0 nx.18
	build _ 1 nvariable;45.46
	build _ 1 nsize.10
	build _ 2 ninsert.5
			||	x
	build _ 0 nx.18
	build _ 2 n=.;43.44
			||	DO
	buildh dDO 0
			||	<;797
			||	integer
			||	5
	buildI 5
	build _ 1 ninteger.2
			||	size
			||	variable;45
			||	x
	build _ 0 nx.18
	build _ 1 nvariable;45.46
	build _ 1 nsize.10
	build _ 2 n<.;797.79
	build _ 3 nWHILE.17
			||	:
			||	=;43
			||	union
			||	variable;45
			||	x
	build _ 0 nx.18
	build _ 1 nvariable;45.46
			||	variable;45
			||	x
	build _ 0 nx.18
	build _ 1 nvariable;45.46
	build _ 2 nunion.7
			||	y
	build _ 0 ny.19
	build _ 2 n=.;43.44
			||	:
			||	=;43
			||	insert
			||	variable;45
			||	x
	build _ 0 nx.18
	build _ 1 nvariable;45.46
			||	variable;44
			||	z
	build _ 0 nz.20
	build _ 1 nvariable;44.45
	build _ 2 ninsert.5
			||	x
	build _ 0 nx.18
	build _ 2 n=.;43.44
			||	:
			||	=;43
			||	new
	build _ 0 nnew.3
			||	x
	build _ 0 nx.18
	build _ 2 n=.;43.44
			||	=;42
			||	integer
			||	7
	buildI 7
	build _ 1 ninteger.2
			||	z
	build _ 0 nz.20
	build _ 2 n=.;42.43
	build _ 2 n:..13
	build _ 2 n:..13
	build _ 2 n:..13
	build _ 2 n:..13
.d 3 0
	jmp s:..13
.n 2 _ ea<.;797.79
.o 1 0
n<.;797.79
	push_node _cycle_in_spine 2
.o 3 0
ea<.;797.79
	jsr_eval 1
	jsr_eval 0
.o 3 0
s<.;797.79
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	<*>;47
			||	pure;48
			||	<;17
	buildh e_StdInt_d<;17 0
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
.d 2 0
	jsr spure;48.49
.o 1 0
	create
			||	a
	push_a 2
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr s<*>;47.48
.o 1 0
			||	b
	push_a 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s<*>;47.48
.n 1 _ eavariable;44.45
.o 1 0
nvariable;44.45
	push_node _cycle_in_spine 1
.o 2 0
eavariable;44.45
.o 2 0
svariable;44.45
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	<lambda>[line:60];25;792
			||	str
	push_a 0
	buildh d\;60;25;792.74 1
	fillh dSem 1 2
	pop_a 1
.d 1 0
	rtn
.desc d\;60;25;792.74 _hnf l\;60;25;792.74 2 0 "<lambda>[line:60];25;792"
.a 0 a\;60;25;792.74
.o 2 0
l\;60;25;792.74
	repl_args 1 1
.o 2 0
a\;60;25;792.74
.o 2 0
ea\;60;25;792.74
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	<case>[line:60];31;812
			||	get`;793
			||	s
	push_a 1
			||	str
	push_a 1
	build _ 2 nget`;793.75
	build _ 1 n_c;60;31;812.94
			||	s
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 1 _
.o 1 0
n_c;60;31;812.94
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea_c;60;31;812.94
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
ea_c;60;31;812.94
	jsr_eval 0
.o 1 0
s_c;60;31;812.94
			||	Match code, stacksizes A: 1 B: 0
	eq_desc e_Data.Maybe_dJust 1 0
	jmp_true case.1
	jmp s_c;60;31;812.94.1
case.1
	repl_args 1 1
	jsr_eval 0
	eq_desc dI 1 0
	jmp_true case.2
	jmp s_c;60;31;812.94.1
case.2
	repl_args 1 1
			||	Redirecting the root to: i
	jsr_eval 0
	pushI_a 0
	pop_a 1
.d 0 1 i
	rtn
s_c;60;31;812.94.1
	pop_a 1
	pushD m_assignment9
	pushD x_94
.d 0 2 ii
	jmp _match_error
.string x_94 "<case>[line:60];31;812"
.n 2 _ eaget`;793.75
.o 1 0
nget`;793.75
	push_node _cycle_in_spine 2
.o 3 0
eaget`;793.75
	jsr_eval 1
.o 3 0
sget`;793.75
			||	Match code, stacksizes A: 2 B: 0
	eq_desc e_Data.Map_dTip 0 1
	jmp_true case.3
	jmp case.4
case.3
			||	Building the contractum, Stacksizes A: 2 B: 0
	fillh e_Data.Maybe_dNothing 0 2
	pop_a 2
.d 1 0
	rtn
case.4
	push_r_args 1 4 1
	buildh _Nil 0
	update_a 0 6
	pop_a 1
	pop_b 1
			||	_x
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
			||	kx
	push_array 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
.d 2 0
	jsr cmpAC
.o 0 1 i
	pushI 0
	gtI
	jmp_false else.5
			||	Building the contractum, Stacksizes A: 6 B: 0
			||	l
	push_a 2
			||	_x
	push_a 5
	update_a 1 7
	updatepop_a 0 6
.d 3 0
	jmp sget`;793.75
else.5
			||	_x
	push_array 4
			||	kx
	push_array 1
			||	Remove unused stack elements
	update_a 3 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr cmpAC
.o 0 1 i
	pushI 0
	gtI
	jmp_false else.6
			||	Building the contractum, Stacksizes A: 4 B: 0
			||	r
	push_a 1
			||	_x
	push_a 3
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp sget`;793.75
else.6
			||	Building the contractum, Stacksizes A: 4 B: 0
			||	x
	push_a 0
	fillh e_Data.Maybe_dJust 1 5
	pop_a 4
.d 1 0
	rtn
.n 2 _ ea=.;42.43
.o 1 0
n=.;42.43
	push_node _cycle_in_spine 2
.o 3 0
ea=.;42.43
	jsr_eval 1
.o 3 0
s=.;42.43
			||	Match code, stacksizes A: 2 B: 0
	push_args 1 1 1
	buildh _Nil 0
	update_a 0 3
	pop_a 1
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	<lambda>[line:52];29;791
			||	f
	push_a 0
			||	var
	push_a 2
	buildh d\;52;29;791.73 2
	fillh dSem 1 4
	pop_a 3
.d 1 0
	rtn
.desc d\;52;29;791.73 _hnf l\;52;29;791.73 3 0 "<lambda>[line:52];29;791"
.a 0 a\;52;29;791.73
.o 2 0
l\;52;29;791.73
	repl_args 2 2
.o 3 0
a\;52;29;791.73
.d 3 0
	jsr ea\;52;29;791.73
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.o 3 0
ea\;52;29;791.73
	jsr_eval 1
.o 3 0
s\;52;29;791.73
			||	Match code, stacksizes A: 3 B: 0
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	AP
			||	s
	push_a 2
			||	f
	push_a 2
			||	Remove unused stack elements
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 1
	repl_args 2 2
			||	var
	push_a 2
	push_a 2
	update_a 1 3
	update_a 2 1
	update_a 0 2
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s_c;52;34;810.92
.o 3 0
s_c;52;34;810.92
			||	Match code, stacksizes A: 3 B: 0
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	_f4
			||	I
			||	int1
	push_a 0
	buildh dI 1
			||	s2
	push_a 2
			||	var
	push_a 4
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	build _ 3 n_f4.304
			||	int1
	push_a 1
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	rtn
.n 3 _ ea_f4.304
.o 1 0
n_f4.304
	push_node _cycle_in_spine 3
.o 4 0
ea_f4.304
.o 4 0
s_f4.304
			||	Match code, stacksizes A: 3 B: 0
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	_
	push_a 2
	jsr_eval 0
			||	_
	push_a 2
	jsr_eval 0
			||	_
	push_a 2
	jsr_eval 0
			||	<;
			||	<;3
	buildh e_StdString_d<;3 0
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 5 0
	jmp e_Data.Map_sput
.n 1 _ eavariable;45.46
.o 1 0
nvariable;45.46
	push_node _cycle_in_spine 1
.o 2 0
eavariable;45.46
.o 2 0
svariable;45.46
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	<lambda>[line:63];25;789
			||	str
	push_a 0
	buildh d\;63;25;789.71 1
	fillh dSem 1 2
	pop_a 1
.d 1 0
	rtn
.desc d\;63;25;789.71 _hnf l\;63;25;789.71 2 0 "<lambda>[line:63];25;789"
.a 0 a\;63;25;789.71
.o 2 0
l\;63;25;789.71
	repl_args 1 1
.o 2 0
a\;63;25;789.71
.o 2 0
ea\;63;25;789.71
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	<case>[line:63];31;808
			||	get`;790
			||	s
	push_a 1
			||	str
	push_a 1
	build _ 2 nget`;790.72
	build _ 1 n_c;63;31;808.90
			||	s
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 1 _ ea_c;63;31;808.90
.o 1 0
n_c;63;31;808.90
	push_node _cycle_in_spine 1
.o 2 0
ea_c;63;31;808.90
	jsr_eval 0
.o 2 0
s_c;63;31;808.90
			||	Match code, stacksizes A: 1 B: 0
	eq_desc e_Data.Maybe_dJust 1 0
	jmp_true case.7
	jmp s_c;63;31;808.90.1
case.7
	repl_args 1 1
	jsr_eval 0
	eq_desc dS 1 0
	jmp_true case.8
	jmp s_c;63;31;808.90.1
case.8
	repl_args 1 1
			||	Redirecting the root to: is
	jmp_eval_upd
s_c;63;31;808.90.1
	pop_a 2
	pushD m_assignment9
	pushD x_90
.d 0 2 ii
	jmp _match_error
.string x_90 "<case>[line:63];31;808"
.n 2 _ eaget`;790.72
.o 1 0
nget`;790.72
	push_node _cycle_in_spine 2
.o 3 0
eaget`;790.72
	jsr_eval 1
.o 3 0
sget`;790.72
			||	Match code, stacksizes A: 2 B: 0
	eq_desc e_Data.Map_dTip 0 1
	jmp_true case.9
	jmp case.10
case.9
			||	Building the contractum, Stacksizes A: 2 B: 0
	fillh e_Data.Maybe_dNothing 0 2
	pop_a 2
.d 1 0
	rtn
case.10
	push_r_args 1 4 1
	buildh _Nil 0
	update_a 0 6
	pop_a 1
	pop_b 1
			||	_x
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
			||	kx
	push_array 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
.d 2 0
	jsr cmpAC
.o 0 1 i
	pushI 0
	gtI
	jmp_false else.11
			||	Building the contractum, Stacksizes A: 6 B: 0
			||	l
	push_a 2
			||	_x
	push_a 5
	update_a 1 7
	updatepop_a 0 6
.d 3 0
	jmp sget`;790.72
else.11
			||	_x
	push_array 4
			||	kx
	push_array 1
			||	Remove unused stack elements
	update_a 3 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr cmpAC
.o 0 1 i
	pushI 0
	gtI
	jmp_false else.12
			||	Building the contractum, Stacksizes A: 4 B: 0
			||	r
	push_a 1
			||	_x
	push_a 3
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp sget`;790.72
else.12
			||	Building the contractum, Stacksizes A: 4 B: 0
			||	x
	push_a 0
	fillh e_Data.Maybe_dJust 1 5
	pop_a 4
.d 1 0
	rtn
.n 2 _ ea=.;43.44
.o 1 0
n=.;43.44
	push_node _cycle_in_spine 2
.o 3 0
ea=.;43.44
	jsr_eval 1
.o 3 0
s=.;43.44
			||	Match code, stacksizes A: 2 B: 0
	push_args 1 1 1
	buildh _Nil 0
	update_a 0 3
	pop_a 1
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	<lambda>[line:55];29;788
			||	f
	push_a 0
			||	var
	push_a 2
	buildh d\;55;29;788.70 2
	fillh dSem 1 4
	pop_a 3
.d 1 0
	rtn
.desc d\;55;29;788.70 _hnf l\;55;29;788.70 3 0 "<lambda>[line:55];29;788"
.a 0 a\;55;29;788.70
.o 2 0
l\;55;29;788.70
	repl_args 2 2
.o 3 0
a\;55;29;788.70
.d 3 0
	jsr ea\;55;29;788.70
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.o 3 0
ea\;55;29;788.70
	jsr_eval 1
.o 3 0
s\;55;29;788.70
			||	Match code, stacksizes A: 3 B: 0
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	AP
			||	s
	push_a 2
			||	f
	push_a 2
			||	Remove unused stack elements
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 1
	repl_args 2 2
			||	var
	push_a 2
	push_a 2
	update_a 1 3
	update_a 2 1
	update_a 0 2
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s_c;55;34;806.88
.o 3 0
s_c;55;34;806.88
			||	Match code, stacksizes A: 3 B: 0
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	_f3
			||	S
			||	ints
	push_a 0
	buildh dS 1
			||	s2
	push_a 2
			||	var
	push_a 4
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	build _ 3 n_f3.303
			||	ints
	push_a 1
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	rtn
.n 3 _ ea_f3.303
.o 1 0
n_f3.303
	push_node _cycle_in_spine 3
.o 4 0
ea_f3.303
.o 4 0
s_f3.303
			||	Match code, stacksizes A: 3 B: 0
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	_
	push_a 2
	jsr_eval 0
			||	_
	push_a 2
	jsr_eval 0
			||	_
	push_a 2
	jsr_eval 0
			||	<;
			||	<;3
	buildh e_StdString_d<;3 0
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 5 0
	jmp e_Data.Map_sput
.n 0 _
.o 1 0
nz.20
	push_node _cycle_in_spine 0
.d 0 0
	jsr eaz.20
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 0 0
eaz.20
.o 0 0
sz.20
			||	Match code, stacksizes A: 0 B: 0
			||	Building the contractum, Stacksizes A: 0 B: 0
	buildAC "z"
.d 1 0
	rtn
.n 0 _
.o 1 0
ny.19
	push_node _cycle_in_spine 0
.d 0 0
	jsr eay.19
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 0 0
eay.19
.o 0 0
sy.19
			||	Match code, stacksizes A: 0 B: 0
			||	Building the contractum, Stacksizes A: 0 B: 0
	buildAC "y"
.d 1 0
	rtn
.n 0 _
.o 1 0
nx.18
	push_node _cycle_in_spine 0
.d 0 0
	jsr eax.18
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 0 0
eax.18
.o 0 0
sx.18
			||	Match code, stacksizes A: 0 B: 0
			||	Building the contractum, Stacksizes A: 0 B: 0
	buildAC "x"
.d 1 0
	rtn
.desc d\;122;36;33.34 _hnf l\;122;36;33.34 3 0 "<lambda>[line:122];36;33"
.a 0 a\;122;36;33.34
.o 2 0
l\;122;36;33.34
	repl_args 2 2
.o 3 0
a\;122;36;33.34
.d 3 0
	jsr ea\;122;36;33.34
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.o 3 0
ea\;122;36;33.34
	jsr_eval 1
.o 3 0
s\;122;36;33.34
			||	Match code, stacksizes A: 3 B: 0
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	AP
			||	s
	push_a 2
			||	cond
	push_a 2
			||	Remove unused stack elements
			||	s
	buildh _Nil 0
	update_a 0 5
	pop_a 1
	jsr_ap 1
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
			||	cond
	push_a 2
			||	a
	push_a 2
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 1 b
	jmp s_c;122;41;804.86
.n 3 _ eaWHILE.17
.o 1 0
nWHILE.17
	push_node _cycle_in_spine 3
.o 4 0
eaWHILE.17
	jsr_eval 2
	jsr_eval 0
.o 4 0
sWHILE.17
			||	Match code, stacksizes A: 3 B: 0
	repl_args 1 1
	push_args 2 1 1
	buildh _Nil 0
	update_a 0 4
	pop_a 1
			||	Building the contractum, Stacksizes A: 4 B: 0
			||	<lambda>[line:122];36;33
			||	cond
	push_a 1
			||	a
	push_a 1
	buildh d\;122;36;33.34 2
	fillh dSem 1 5
	pop_a 4
.d 1 0
	rtn
.o 3 1 b
s_c;122;41;804.86
			||	Match code, stacksizes A: 3 B: 1
	push_b 0
	jmp_false else.13
			||	Building the contractum, Stacksizes A: 3 B: 1
			||	AP
			||	a
	push_a 1
	jsr_eval 0
			||	s2
	push_a 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
	pop_b 1
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 1
	repl_args 2 2
			||	a
	push_a 2
			||	cond
	push_a 4
	push_a 3
	update_a 2 4
	update_a 0 2
	update_a 3 0
	update_a 1 3
	update_a 0 1
	pop_a 1
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 4 0
	jmp s_c;124;58;803.85
else.13
			||	Building the contractum, Stacksizes A: 3 B: 1
			||	_Unit
	buildh e__predef_d_Unit 0
			||	s2
	push_a 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 4
	updatepop_a 0 3
	pop_b 1
.d 2 0
	rtn
.o 4 0
s_c;124;58;803.85
			||	Match code, stacksizes A: 4 B: 0
			||	Building the contractum, Stacksizes A: 4 B: 0
			||	unS
			||	WHILE
			||	Sem
			||	a
	push_a 3
	buildh dSem 1
			||	DO
	buildh dDO 0
			||	Sem
			||	cond
	push_a 4
	buildh dSem 1
	create
	push_a 3
	update_a 1 4
	update_a 2 1
	update_a 3 2
	update_a 0 3
	pop_a 1
			||	Remove unused stack elements
	update_a 5 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 4 0
	jsr sWHILE.17
.o 1 0
			||	s3
	push_a 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr sunS.299
.o 2 0
.d 2 0
	jmp s_c;125;68;802.84
.o 2 0
s_c;125;68;802.84
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	_Unit
	buildh e__predef_d_Unit 0
			||	s4
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	rtn
.n 2 _ ea:..13
.o 1 0
n:..13
	push_node _cycle_in_spine 2
.o 3 0
ea:..13
.o 3 0
s:..13
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	Applicative;
			||	Functor;
			||	fmap;46
	buildh dfmap;46.47 0
			||	pure;48
	buildh dpure;48.49 0
			||	<*>;47
	buildh d<*>;47.48 0
			||	b
	push_a 4
			||	a
	push_a 4
	push_a 4
	update_a 2 5
	update_a 4 2
	update_a 1 4
	update_a 3 1
	update_a 0 3
	pop_a 1
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 5 0
	jsr e_Control.Applicative_s*>
.o 1 0
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.o 1 0
seval.12
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	emptyState
	build _ 0 nemptyState.1
			||	e
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jmp sunS.299
.n 1 _ easize.10
.o 1 0
nsize.10
	push_node _cycle_in_spine 1
.o 2 0
easize.10
	jsr_eval 0
.o 2 0
ssize.10
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	length;47
	buildh e_StdList_dlength;47 0
			||	s
	push_a 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp sfmap;46.47
.n 2 _ eadifference.9
.o 1 0
ndifference.9
	push_node _cycle_in_spine 2
.o 3 0
eadifference.9
	jsr_eval 1
	jsr_eval 0
.o 3 0
sdifference.9
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	<*>;47
			||	pure;48
			||	_f1
	build _ 0 n_f1.301
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
.d 2 0
	jsr spure;48.49
.o 1 0
	create
			||	s1
	push_a 2
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr s<*>;47.48
.o 1 0
			||	s2
	push_a 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s<*>;47.48
.n 0 _ ea_f1.301
.o 1 0
n_f1.301
	push_node _cycle_in_spine 0
.o 1 0
ea_f1.301
.o 1 0
s_f1.301
			||	Match code, stacksizes A: 0 B: 0
			||	Building the contractum, Stacksizes A: 0 B: 0
			||	==;
			||	==;16
	buildh e_StdInt_d==;16 0
.d 2 0
	jmp e_Data.List_sdifference
.n 2 _ eaintersect.8
.o 1 0
nintersect.8
	push_node _cycle_in_spine 2
.o 3 0
eaintersect.8
	jsr_eval 1
	jsr_eval 0
.o 3 0
sintersect.8
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	<*>;47
			||	pure;48
			||	_f0
	build _ 0 n_f0.300
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
.d 2 0
	jsr spure;48.49
.o 1 0
	create
			||	s1
	push_a 2
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr s<*>;47.48
.o 1 0
			||	s2
	push_a 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s<*>;47.48
.n 0 _ ea_f0.300
.o 1 0
n_f0.300
	push_node _cycle_in_spine 0
.o 1 0
ea_f0.300
.o 1 0
s_f0.300
			||	Match code, stacksizes A: 0 B: 0
			||	Building the contractum, Stacksizes A: 0 B: 0
			||	==;
			||	==;16
	buildh e_StdInt_d==;16 0
.d 2 0
	jmp e_Data.List_sintersect
.n 2 _ eaunion.7
.o 1 0
nunion.7
	push_node _cycle_in_spine 2
.o 3 0
eaunion.7
	jsr_eval 1
	jsr_eval 0
.o 3 0
sunion.7
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	<*>;47
			||	pure;48
			||	_f2
	build _ 0 n_f2.302
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
.d 2 0
	jsr spure;48.49
.o 1 0
	create
			||	s1
	push_a 2
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr s<*>;47.48
.o 1 0
			||	s2
	push_a 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s<*>;47.48
.n 0 _ ea_f2.302
.o 1 0
n_f2.302
	push_node _cycle_in_spine 0
.o 1 0
ea_f2.302
.o 1 0
s_f2.302
			||	Match code, stacksizes A: 0 B: 0
			||	Building the contractum, Stacksizes A: 0 B: 0
			||	==;
			||	==;16
	buildh e_StdInt_d==;16 0
.d 2 0
	jmp e_Data.List_sunion
.n 2 _ eainsert.5
.o 1 0
ninsert.5
	push_node _cycle_in_spine 2
.o 3 0
eainsert.5
	jsr_eval 1
	jsr_eval 0
.o 3 0
sinsert.5
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	fmap;46
			||	toList
	buildh dtoList.4 0
	create
			||	e
	push_a 2
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr sfmap;46.47
.o 1 0
			||	<*>;47
			||	pure;48
			||	++
	buildh e_StdList_d++ 0
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
.d 2 0
	jsr spure;48.49
.o 1 0
	create
			||	s
	push_a 3
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
			||	Remove unused stack elements
			||	s
	buildh _Nil 0
	update_a 0 5
	pop_a 1
.d 3 0
	jsr s<*>;47.48
.o 1 0
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s<*>;47.48
.desc d<*>;47.48 _hnf l<*>;47.48 2 0 "<*>;47"
.a 2 ea<*>;47.48
.o 2 0
l<*>;47.48
	push_args 0 1 1
	update_a 2 1
	create
	update_a 0 3
	pop_a 1
.o 3 0
ea<*>;47.48
	jsr_eval 1
	jsr_eval 0
.o 3 0
s<*>;47.48
			||	Match code, stacksizes A: 2 B: 0
	repl_args 1 1
	push_args 1 1 1
	buildh _Nil 0
	update_a 0 3
	pop_a 1
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	<lambda>[line:76];33;40
			||	f
	push_a 1
			||	x
	push_a 1
	buildh d\;76;33;40.41 2
	fillh dSem 1 4
	pop_a 3
.d 1 0
	rtn
.desc d\;76;33;40.41 _hnf l\;76;33;40.41 3 0 "<lambda>[line:76];33;40"
.a 0 a\;76;33;40.41
.o 2 0
l\;76;33;40.41
	repl_args 2 2
.o 3 0
a\;76;33;40.41
.d 3 0
	jsr ea\;76;33;40.41
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.o 3 0
ea\;76;33;40.41
	jsr_eval 1
	jsr_eval 0
.o 3 0
s\;76;33;40.41
			||	Match code, stacksizes A: 3 B: 0
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	AP
			||	s
	push_a 2
			||	f
	push_a 2
			||	Remove unused stack elements
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 1
	repl_args 2 2
			||	x
	push_a 2
	push_a 2
	update_a 1 3
	update_a 2 1
	update_a 0 2
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s_c;76;38;800.82
.o 3 0
s_c;76;38;800.82
			||	Match code, stacksizes A: 3 B: 0
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	AP
			||	xs
	push_a 1
			||	x
	push_a 3
			||	Remove unused stack elements
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 1
	repl_args 2 2
			||	f1
	push_a 2
	push_a 2
	update_a 1 3
	update_a 2 1
	update_a 0 2
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s_c;77;44;799.81
.o 3 0
s_c;77;44;799.81
			||	Match code, stacksizes A: 3 B: 0
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	AP
			||	x1
	push_a 0
			||	f1
	push_a 3
	build e_system_dAP 2 e_system_nAP
			||	xss
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	rtn
.desc dfmap;46.47 _hnf lfmap;46.47 2 0 "fmap;46"
.a 2 eafmap;46.47
.o 2 0
lfmap;46.47
	push_args 0 1 1
	update_a 2 1
	create
	update_a 0 3
	pop_a 1
.o 3 0
eafmap;46.47
	jsr_eval 1
.o 3 0
sfmap;46.47
			||	Match code, stacksizes A: 2 B: 0
	push_args 1 1 1
	buildh _Nil 0
	update_a 0 3
	pop_a 1
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	<lambda>[line:72];27;38
			||	s
	push_a 0
			||	f
	push_a 2
	buildh d\;72;27;38.39 2
	fillh dSem 1 4
	pop_a 3
.d 1 0
	rtn
.desc d\;72;27;38.39 _hnf l\;72;27;38.39 3 0 "<lambda>[line:72];27;38"
.a 0 a\;72;27;38.39
.o 2 0
l\;72;27;38.39
	repl_args 2 2
.o 3 0
a\;72;27;38.39
.d 3 0
	jsr ea\;72;27;38.39
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.o 3 0
ea\;72;27;38.39
	jsr_eval 1
.o 3 0
s\;72;27;38.39
			||	Match code, stacksizes A: 3 B: 0
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	AP
			||	x
	push_a 2
			||	s
	push_a 2
			||	Remove unused stack elements
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 1
	repl_args 2 2
			||	f
	push_a 2
	push_a 2
	update_a 1 3
	update_a 2 1
	update_a 0 2
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s_c;72;32;798.80
.o 3 0
s_c;72;32;798.80
			||	Match code, stacksizes A: 3 B: 0
			||	Building the contractum, Stacksizes A: 3 B: 0
			||	AP
			||	a
	push_a 0
			||	f
	push_a 3
	build e_system_dAP 2 e_system_nAP
			||	s2
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	rtn
.desc dtoList.4 _hnf ltoList.4 1 0 "toList"
.o 2 0
ltoList.4
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.o 2 0
eatoList.4
.o 2 0
stoList.4
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	[]
	buildh _Nil 0
			||	i
	push_a 1
	fillh _Cons 2 3
	pop_a 1
.d 1 0
	rtn
.n 0 _ eanew.3
.o 1 0
nnew.3
	push_node _cycle_in_spine 0
.o 1 0
eanew.3
.o 1 0
snew.3
			||	Match code, stacksizes A: 0 B: 0
			||	Building the contractum, Stacksizes A: 0 B: 0
			||	[]
	buildh _Nil 0
.d 2 0
	jmp spure;48.49
.n 1 _ eainteger.2
.o 1 0
ninteger.2
	push_node _cycle_in_spine 1
.o 2 0
eainteger.2
.o 2 0
sinteger.2
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	i
	push_a 0
	updatepop_a 0 1
.d 2 0
	jmp spure;48.49
.desc dpure;48.49 _hnf lpure;48.49 1 0 "pure;48"
.o 2 0
lpure;48.49
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.o 2 0
eapure;48.49
.o 2 0
spure;48.49
			||	Match code, stacksizes A: 1 B: 0
			||	Building the contractum, Stacksizes A: 1 B: 0
			||	<lambda>[line:75];18;39
			||	a
	push_a 0
	buildh d\;75;18;39.40 1
	fillh dSem 1 2
	pop_a 1
.d 1 0
	rtn
.desc d\;75;18;39.40 _hnf l\;75;18;39.40 2 0 "<lambda>[line:75];18;39"
.a 0 a\;75;18;39.40
.o 2 0
l\;75;18;39.40
	repl_args 1 1
.o 2 0
a\;75;18;39.40
.o 2 0
ea\;75;18;39.40
			||	Match code, stacksizes A: 2 B: 0
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	s
	push_a 1
			||	a
	push_a 1
	update_a 1 3
	updatepop_a 0 2
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 0 _ eaemptyState.1
.o 1 0
nemptyState.1
	push_node _cycle_in_spine 0
.o 1 0
eaemptyState.1
.o 1 0
semptyState.1
			||	Match code, stacksizes A: 0 B: 0
			||	Building the contractum, Stacksizes A: 0 B: 0
.d 1 0
	jmp e_Data.Map_snewMap
.o 2 0
sunS.299
			||	Match code, stacksizes A: 2 B: 0
	repl_args 1 1
			||	Building the contractum, Stacksizes A: 2 B: 0
			||	f
	push_a 0
	jsr_eval 0
			||	_
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 1
	repl_args 2 2
.d 2 0
	rtn
.impmod _system
.implab _match_error
